/*
기능이 추가되었으므로, 사원들에게 더 많은 기능을 강제하기 위한 객체의 정의
*/
package music;
// 날아갈 수 있는 제트엔진 추긴기.
// 자바언어는 다중상속을 원칙적으로 금지하고 있다
// 하지만, 우리의 현실은 오히려 다중상속적 특징이 더 많다.
// 이러한 문제를 해결하기 위해 지원되는 객체가 바로 인터페이스 인데,
// 인터페이스는 클래스는 아니면서, 메서드만을 보유한 객체이다.
// 인터페이스는 추상클래스와 마찬가지로, 추상메서드를 가지고 있으면,
// 특히, 인터페이스가 가진 메서드는 모두 추상메서드이다.
// 인터페이스가 추상클래스모다 더 추상적이다.
// 결론 : 클래스가 아니므로, 다중 상속을 피해갈 수 있다.
public interface Jet{  // interface 는 모두 추상이기 때문에 클래스 앞에 abstract 빼도 된다.
	 public void fly(); // 인터페이스 내에서는 모두 추상메서드 이므로 앞에 abstract 를 빼도 된다.
}
